1.Business Request-1
SELECT 
    c.city_name,
    COUNT(t.trip_id) AS total_trips,
    ROUND(AVG(t.fare_amount), 2) AS avg_fare_per_trip,
    ROUND(SUM(t.fare_amount) / SUM(t.distance_travelled_km), 2) AS avg_fare_per_km,
    ROUND((COUNT(t.trip_id)*100/ SUM(COUNT(t.trip_id)) OVER()),2) AS "%_contribution_to_total_trips"
FROM fact_trips t
JOIN dim_city c
ON c.city_id = t.city_id
GROUP BY c.city_name
ORDER BY "%_contribution_to_total_trips" DESC;

2.Business Request-2
WITH cte1 AS (SELECT 
       c.city_id,
	   c.city_name, 
       dt.month_name, 
       dt.start_of_month, 
       count(t.trip_id) AS actual_trips  
       FROM fact_trips t 
       JOIN dim_city c 
       ON c.city_id = t.city_id
       JOIN dim_date dt 
       ON dt.date = t.date
GROUP BY c.city_id, c.city_name, dt.month_name, dt.start_of_month),
cte2 AS (
          SELECT a.*,
                 tt.total_target_trips
          FROM cte1 a
          JOIN targets_db.monthly_target_trips tt
          ON a.city_id = tt.city_id AND
             a.start_of_month = tt.month)

SELECT city_name,
       month_name,
       actual_trips,
       total_target_trips,
       CASE WHEN actual_trips > total_target_trips THEN "Above Target"
            WHEN actual_trips < total_target_trips THEN "Below Target"
            ELSE "Same"
       END AS performance_status,
       ROUND((actual_trips - total_target_trips)*100/actual_trips,2) AS "%_difference"
FROM cte2

3.Business Request-3
WITH cte1 AS(SELECT 
    c.city_name,
    SUM(td.repeat_passenger_count) AS total_repeat_passengers,
    SUM(SUM(td.repeat_passenger_count)) OVER (PARTITION BY c.city_name) AS total_repeat_passenger_city,
    td.trip_count
FROM dim_repeat_trip_distribution td
JOIN dim_city c
ON td.city_id = c.city_id
GROUP BY c.city_name, td.trip_count),

cte2 AS(SELECT 
          a.city_name,
          a.trip_count,
          ROUND((total_repeat_passengers*100/total_repeat_passenger_city),2) AS pct_of_passengers
          FROM cte1 a
          )
          
SELECT 
    city_name,
    MAX(CASE WHEN trip_count="2-Trips" THEN pct_of_passengers ELSE 0 END) AS "2-Trips",
    MAX(CASE WHEN trip_count="3-Trips" THEN pct_of_passengers ELSE 0 END) AS "3-Trips",
    MAX(CASE WHEN trip_count="4-Trips" THEN pct_of_passengers ELSE 0 END) AS "4-Trips",
    MAX(CASE WHEN trip_count="5-Trips" THEN pct_of_passengers ELSE 0 END) AS "5-Trips",
    MAX(CASE WHEN trip_count="6-Trips" THEN pct_of_passengers ELSE 0 END) AS "6-Trips",
    MAX(CASE WHEN trip_count="7-Trips" THEN pct_of_passengers ELSE 0 END) AS "7-Trips",
    MAX(CASE WHEN trip_count="8-Trips" THEN pct_of_passengers ELSE 0 END) AS "8-Trips",
    MAX(CASE WHEN trip_count="9-Trips" THEN pct_of_passengers ELSE 0 END) AS "9-Trips",
    MAX(CASE WHEN trip_count="10-Trips" THEN pct_of_passengers ELSE 0 END) AS "10-Trips"
FROM cte2
GROUP BY city_name
ORDER BY city_name 

4.Business Request-4
WITH rankcities AS (SELECT 
                       c.city_name,
                       SUM(ps.new_passengers) AS total_new_passengers,
					   RANK() OVER ( ORDER BY SUM(ps.new_passengers) DESC) AS rank_desc,
                       RANK() OVER ( ORDER BY SUM(ps.new_passengers) ASC) AS rank_asc
                    FROM fact_passenger_summary ps
                    JOIN dim_city c
                    ON c.city_id = ps.city_id
                    GROUP BY c.city_name),

TopandBottomCities AS(SELECT
                      city_name,total_new_passengers,"Top 3" AS category
                      FROM rankcities
                      WHERE rank_desc<=3
				UNION ALL
                       SELECT
                      city_name,total_new_passengers,"Bottom 3" AS category
                       FROM rankcities rc
                      WHERE rank_asc<=3 
                     )
	SELECT * FROM TopandBottomCities
    ORDER BY total_new_passengers DESC

5. Business Request-5
WITH cte1 AS(SELECT 
     c.city_name,
	 SUM(fare_amount) AS revenue,
     MONTHNAME(t.date) AS highest_revenue_month,
     RANK() OVER( PARTITION BY c.city_name ORDER BY SUM(fare_amount) DESC) AS rank_revenue_month,
     SUM(SUM(fare_amount)) OVER(PARTITION BY c.city_name) AS monthwise_revenue
FROM 
     fact_trips t
JOIN 
	 dim_city c
ON 
     c.city_id = t.city_id
GROUP BY 
     c.city_name, highest_revenue_month)

SELECT city_name, 
       revenue, 
       highest_revenue_month,
	   ROUND((revenue *100 /monthwise_revenue),2) AS pct_contribution
FROM cte1
WHERE rank_revenue_month=1
ORDER BY revenue DESC

6.Business Request -6
WITH city_summary AS (
    SELECT 
        city_id,
        SUM(repeat_passengers) AS total_repeat_passengers,
        SUM(total_passengers) AS total_passengers
    FROM fact_passenger_summary
    GROUP BY city_id
)
SELECT 
    c.city_name,
    ps.total_passengers,
    ps.repeat_passengers,
    ROUND((ps.repeat_passengers * 100.0 / ps.total_passengers), 2) AS monthly_repeat_passenger_rate,
    ROUND((cs.total_repeat_passengers * 100.0 / cs.total_passengers), 2) AS city_repeat_passenger_rate
FROM fact_passenger_summary ps
JOIN dim_city c ON c.city_id = ps.city_id
JOIN city_summary cs ON cs.city_id = c.city_id;
